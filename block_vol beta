#include <bits/stdc++.h>

using namespace std;

void read_arr(int arr[][5], int &length, int &k)
{
    cin >> length;
    cin >> k;
    for (int i = 0; i < length; i++)
    {
        cin >> arr[i][0];
        cin >> arr[i][1];
        cin >> arr[i][2];
        arr[i][3] = arr[i][0] * arr[i][1] * arr[i][2];
        arr[i][4] = i;
    }
}

void place_3_elements(int arr[][5], int left, int right, int arg_idx) {
    if (arr[left][arg_idx] > arr[(left + right) / 2][arg_idx])
        swap(arr[left], arr[(left + right) / 2]);
    if (arr[(left + right) / 2][arg_idx] > arr[right][arg_idx])
        swap (arr[(left + right) / 2], arr[right]);
    if (arr[left][arg_idx] > arr[(left + right) / 2][arg_idx])
        swap(arr[left], arr[(left + right) / 2]);
}

void quicksort(int arr[][5], int left, int right, int arg_idx) {
    place_3_elements(arr, left, right, arg_idx);
    int i = left, j = right;
    int etalon = arr[(left + right) / 2][arg_idx];
    while (i < j) {
        while(arr[i][arg_idx] < etalon) i++;
        while(arr[j][arg_idx] > etalon) j--;
        if (i <= j) {
            swap(arr[i], arr[j]);
            i++;
            j--;
        }
    }
    if (left < j) quicksort(arr, left, j, arg_idx);
    if (i < right) quicksort(arr, i, right, arg_idx);
}

void fill_ans_arr(int arr[][5], int length, int ans_arr[], int &ans_length, int k)
{
    ans_length = 0;
    int current_diff = 1, current_num = arr[0][3], current_idx;
    for (int i = 0; current_diff < k || i < length ; i++)
    {
        if (arr[i][3] > current_num)
        {
            current_diff++;
            current_num = arr[i][3];
        }
        current_idx = i;
    }
    if (current_diff < k)
    {
        ans_arr[0] = -1;
        return;
    }
    int i = 0;
    while(current_idx <= length && arr[current_idx][3] == current_num)
    {
        ans_arr[i] = arr[current_idx][4];
        i++;
        current_idx++;
        ans_length++;
    }
}

void print_arr(int arr[], int length)
{
    if (arr[0] == -1) cout << "No more bricks.";
    else {
        for (int i = 0; i < length; i++) cout << arr[i] + 1 << " ";
    }
}

int main()
{
    ios_base::sync_with_stdio(0);
    cin.tie(0);
    cout.tie(0);
    int arr[100000][5], ans_arr[100000], length, ans_length, k;
    read_arr(arr, length, k);
    quicksort(arr, 0, length - 1, 3);
    fill_ans_arr(arr, length, ans_arr, ans_length, k);
    sort(ans_arr, ans_arr + ans_length);
    print_arr(ans_arr, ans_length);
}
